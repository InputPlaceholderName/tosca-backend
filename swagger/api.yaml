openapi: 3.0.1
info:
  title: Tosca
  description: Tosca Backend V1
  license:
    name: MIT
    url: https://github.com/InputPlaceholderName/tosca-backend
  version: 1.0.0
externalDocs:
  description: API description of backend API calls.
  url: https://github.com/InputPlaceholderName/tosca-backend/
servers:
  - url: http://localhost:8080
  - url: https://tosca-web.herokuapp.com
tags:
  - name: workspaces
    description: All workspace related endpoints
  - name: queues
    description: Queue related endpoints
  - name: auth
    description: Authentication related endpoints
paths:
  /login:
    get:
      tags:
        - auth
      description: Starts the OpenID Connect login process

  /authorization-code/callback:
    get:
      tags:
        - auth
      description: Callback endpoint for OpenID Connect login process

  /v1/workspaces:
    get:
      tags:
        - workspaces
      operationId: getWorkspaces
      security:
        - bearerAuth: []
      description: Gets all workspaces. Only available to a Super User.
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
    post:
      tags:
        - workspaces
      operationId: postWorkspace
      security:
        - bearerAuth: []
      description: Creates a new workspace, requires that the current user has the Admin or SuperUser group
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  required: true
                information:
                  type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'

  /v1/workspaces/{id}/users:
    parameters:
      - name: id
        in: path
        description: The workspace to add a user to
        required: true
        schema:
          $ref: '#/components/schemas/ID'
    post:
      tags:
        - workspaces
      operationId: addWorkspaceUser
      security:
        - bearerAuth: []
      description: Adds a user to a workspace with a role
      requestBody:
        content:
          application/json:
            schema:
              properties:
                user:
                  $ref: '#/components/schemas/ID'
                role:
                  $ref: '#/components/schemas/Role'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/FullWorkspaceUser'

  /v1/workspaces{workspace_id}/users/{id}:
    parameters:
      - name: workspace_id
        in: path
        description: The workspace
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      - name: id
        in: path
        description: The user to add/modify/delete
        required: true
        schema:
          $ref: '#/components/schemas/ID'
    put:
      tags:
        - workspaces
      operationId: modifyWorkspaceUser
      security:
        - bearerAuth: []
      description: Modify a users role for a workspace
      requestBody:
        content:
          application/json:
            schema:
              properties:
                role:
                  $ref: '#/components/schemas/Role'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullWorkspaceUser'
    delete:
      tags:
        - workspaces
      operationId: deleteWorkspaceUser
      security:
        - bearerAuth: []
      description: Delete a users role for a workspace
      responses:
        204:
          description: success

  /v1/workspaces/{id}:
    get:
      tags:
        - workspaces
      operationId: getWorkspace
      security:
        - bearerAuth: []
      description: Gets a single workspace. The user has to be a Super User or a member of the workspace.
      parameters:
        - name: id
          in: path
          description: ID of the workspace
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FullWorkspace'
    patch:
      tags:
        - workspaces
      operationId: patchWorkspace
      security:
        - bearerAuth: []
      description: Updates name, information and creator for a Workspace. Requires the user to be either SuperUser or the creator of the workspace.
      parameters:
        - name: id
          in: path
          description: ID of the workspace
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  required: true
                information:
                  type: string
                creator:
                  $ref: '#/components/schemas/ID'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullWorkspace'
    delete:
      tags:
        - workspaces
      operationId: deleteWorkspace
      security:
        - bearerAuth: []
      description: Deletes a workspace. Only available to the creator of the workspace and SuperUsers
      parameters:
        - name: id
          in: path
          description: ID of the workspace
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        204:
          description: success
        401:
          description: Missing permissions

  /v1/user:
    get:
      tags:
        - user
      operationId: getCurrentUser
      security:
        - bearerAuth: []
      description: Gets the current logged in user
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithGroups'

  /v1/users:
    get:
      tags:
        - user
      operationId: getAllUsers
      security:
        - bearerAuth: []
      description: Gets all users. Must be Super User to call.
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        403:
          description: Missing permissions (group Super User)

  /v1/users/{id}:
    get:
      tags:
        - user
      operationId: getUser
      security:
        - bearerAuth: []
      description: Gets a specific user
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullUser'

  /v1/users/{id}/workspaces:
    get:
      tags:
        - user
        - workspaces
      operationId: getUserWorkspaces
      security:
        - bearerAuth: []
      description: Gets workspaces for a specific user. Non Super Users can only request their own users workspaces.
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/ID'

      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FullUserWorkspace'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  schemas:
    ID:
      type: integer
      format: int32

    Workspace:
      type: object
      required:
          - id
          - info
          - creator
          - queues
      properties:
        id:
          $ref: '#/components/schemas/ID'
        name:
          type: string
        information:
          type: string
        creator:
          $ref: '#/components/schemas/User'

    FullWorkspace:
      allOf:
        - $ref: '#/components/schemas/Workspace'
        - type: object
          properties:
            waitingLists:
              type: array
              items:
                $ref: '#/components/schemas/WaitingList'
            signups:
              type: array
              items:
                $ref: '#/components/schemas/Signup'
            users:
              type: array
              items:
                $ref: '#/components/schemas/FullWorkspaceUser'

    UserWithGroups:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            groups:
              $ref: '#/components/schemas/Groups'

    Groups:
      type: array
      items:
        type: string
        enum:
          - SuperUser
          - Admin
          - Everyone

    Role:
      type: string
      enum:
        - Admin
        - Normal

    User:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ID'
        userId:
          type: string
        firstName:
          type: string
        lastName:
          type: string

    FullUser:
      allOf:
        - $ref: '#/components/schemas/User'
        - object:
          properties:
            workspaces:
              type: array
              items:
                $ref: '#/components/schemas/FullUserWorkspace'

    FullUserWorkspace:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/Role'
        workspace:
          $ref: '#/components/schemas/Workspace'

    FullWorkspaceUser:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/Role'
        user:
          $ref: '#/components/schemas/User'

    WaitingList:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ID'
        workspace:
          $ref: '#/components/schemas/ID'
        title:
          type: string
        information:
          type: string

    Signup:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ID'
        workspace:
          $ref: '#/components/schemas/ID'
        title:
          type: string
        information:
          type: string
        maxUserSignups:
          type: integer
